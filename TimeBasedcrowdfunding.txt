// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract TimeBasedCrowdfunding {
    /// @notice The funding goal for the campaign
    uint public goal;

    /// @notice The deadline for the crowdfunding campaign
    uint public deadline;

    /// @notice The total amount of funds raised so far
    uint public raisedAmount;

    /**
     * @notice Set the deadline for the crowdfunding campaign
     * @dev This function allows the campaign creator to set a time limit for contributions.
     * @param _deadline The deadline timestamp to be set
     * @return None
     */
    function setDeadline(uint _deadline) public {
        deadline = _deadline;
    }

    /**
     * @notice Contribute funds to the crowdfunding campaign
     * @dev Requires that the contribution is made before the deadline. The contribution amount 
     * is added to the total funds raised. However, this function is vulnerable to front-running 
     * attacks where contributions can be timed to happen right before the deadline, potentially 
     * altering the outcome or status of the campaign.
     * @param msg.value The amount of ether being contributed
     * @return None
     */
    function contribute() public payable {
        require(block.timestamp < deadline, "Crowdfunding has ended.");
        raisedAmount += msg.value;
    }
}
